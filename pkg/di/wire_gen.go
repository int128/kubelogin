// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"github.com/int128/kubelogin/pkg/adaptors"
	"github.com/int128/kubelogin/pkg/adaptors/cmd"
	"github.com/int128/kubelogin/pkg/adaptors/credentialplugin"
	"github.com/int128/kubelogin/pkg/adaptors/env"
	"github.com/int128/kubelogin/pkg/adaptors/kubeconfig"
	"github.com/int128/kubelogin/pkg/adaptors/logger"
	"github.com/int128/kubelogin/pkg/adaptors/oidc"
	"github.com/int128/kubelogin/pkg/adaptors/tokencache"
	"github.com/int128/kubelogin/pkg/usecases"
	"github.com/int128/kubelogin/pkg/usecases/auth"
	credentialplugin2 "github.com/int128/kubelogin/pkg/usecases/credentialplugin"
	"github.com/int128/kubelogin/pkg/usecases/login"
)

// Injectors from di.go:

func NewCmd() adaptors.Cmd {
	adaptorsLogger := logger.New()
	factory := &oidc.Factory{
		Logger: adaptorsLogger,
	}
	decoder := &oidc.Decoder{}
	envEnv := &env.Env{}
	showLocalServerURL := &auth.ShowLocalServerURL{
		Logger: adaptorsLogger,
	}
	authentication := &auth.Authentication{
		OIDC:               factory,
		OIDCDecoder:        decoder,
		Env:                envEnv,
		Logger:             adaptorsLogger,
		ShowLocalServerURL: showLocalServerURL,
	}
	kubeconfigKubeconfig := &kubeconfig.Kubeconfig{}
	loginLogin := &login.Login{
		Authentication: authentication,
		Kubeconfig:     kubeconfigKubeconfig,
		Logger:         adaptorsLogger,
	}
	root := &cmd.Root{
		Login:  loginLogin,
		Logger: adaptorsLogger,
	}
	repository := &tokencache.Repository{}
	interaction := &credentialplugin.Interaction{}
	getToken := &credentialplugin2.GetToken{
		Authentication:       authentication,
		TokenCacheRepository: repository,
		Interaction:          interaction,
		Logger:               adaptorsLogger,
	}
	cmdGetToken := &cmd.GetToken{
		GetToken: getToken,
		Logger:   adaptorsLogger,
	}
	cmdCmd := &cmd.Cmd{
		Root:     root,
		GetToken: cmdGetToken,
		Logger:   adaptorsLogger,
	}
	return cmdCmd
}

func NewCmdForHeadless(adaptorsLogger adaptors.Logger, loginShowLocalServerURL usecases.LoginShowLocalServerURL, credentialPluginInteraction adaptors.CredentialPluginInteraction) adaptors.Cmd {
	factory := &oidc.Factory{
		Logger: adaptorsLogger,
	}
	decoder := &oidc.Decoder{}
	envEnv := &env.Env{}
	authentication := &auth.Authentication{
		OIDC:               factory,
		OIDCDecoder:        decoder,
		Env:                envEnv,
		Logger:             adaptorsLogger,
		ShowLocalServerURL: loginShowLocalServerURL,
	}
	kubeconfigKubeconfig := &kubeconfig.Kubeconfig{}
	loginLogin := &login.Login{
		Authentication: authentication,
		Kubeconfig:     kubeconfigKubeconfig,
		Logger:         adaptorsLogger,
	}
	root := &cmd.Root{
		Login:  loginLogin,
		Logger: adaptorsLogger,
	}
	repository := &tokencache.Repository{}
	getToken := &credentialplugin2.GetToken{
		Authentication:       authentication,
		TokenCacheRepository: repository,
		Interaction:          credentialPluginInteraction,
		Logger:               adaptorsLogger,
	}
	cmdGetToken := &cmd.GetToken{
		GetToken: getToken,
		Logger:   adaptorsLogger,
	}
	cmdCmd := &cmd.Cmd{
		Root:     root,
		GetToken: cmdGetToken,
		Logger:   adaptorsLogger,
	}
	return cmdCmd
}
