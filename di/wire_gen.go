// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/int128/kubelogin/adaptors"
	"github.com/int128/kubelogin/adaptors/cmd"
	"github.com/int128/kubelogin/adaptors/env"
	"github.com/int128/kubelogin/adaptors/kubeconfig"
	"github.com/int128/kubelogin/adaptors/logger"
	"github.com/int128/kubelogin/adaptors/oidc"
	"github.com/int128/kubelogin/usecases"
	"github.com/int128/kubelogin/usecases/login"
)

// Injectors from di.go:

func NewCmd() adaptors.Cmd {
	kubeconfigKubeconfig := &kubeconfig.Kubeconfig{}
	adaptorsLogger := logger.New()
	factory := &oidc.Factory{
		Logger: adaptorsLogger,
	}
	envEnv := &env.Env{}
	showLocalServerURL := &login.ShowLocalServerURL{
		Logger: adaptorsLogger,
	}
	loginLogin := &login.Login{
		Kubeconfig:         kubeconfigKubeconfig,
		OIDC:               factory,
		Env:                envEnv,
		Logger:             adaptorsLogger,
		ShowLocalServerURL: showLocalServerURL,
	}
	exec := &login.Exec{
		Kubeconfig:         kubeconfigKubeconfig,
		OIDC:               factory,
		Env:                envEnv,
		Logger:             adaptorsLogger,
		ShowLocalServerURL: showLocalServerURL,
	}
	cmdCmd := &cmd.Cmd{
		Login:        loginLogin,
		LoginAndExec: exec,
		Logger:       adaptorsLogger,
	}
	return cmdCmd
}

func NewCmdWith(adaptorsLogger adaptors.Logger, loginShowLocalServerURL usecases.LoginShowLocalServerURL) adaptors.Cmd {
	kubeconfigKubeconfig := &kubeconfig.Kubeconfig{}
	factory := &oidc.Factory{
		Logger: adaptorsLogger,
	}
	envEnv := &env.Env{}
	loginLogin := &login.Login{
		Kubeconfig:         kubeconfigKubeconfig,
		OIDC:               factory,
		Env:                envEnv,
		Logger:             adaptorsLogger,
		ShowLocalServerURL: loginShowLocalServerURL,
	}
	exec := &login.Exec{
		Kubeconfig:         kubeconfigKubeconfig,
		OIDC:               factory,
		Env:                envEnv,
		Logger:             adaptorsLogger,
		ShowLocalServerURL: loginShowLocalServerURL,
	}
	cmdCmd := &cmd.Cmd{
		Login:        loginLogin,
		LoginAndExec: exec,
		Logger:       adaptorsLogger,
	}
	return cmdCmd
}

// di.go:

var usecasesSet = wire.NewSet(login.Login{}, login.Exec{}, wire.Bind((*usecases.Login)(nil), (*login.Login)(nil)), wire.Bind((*usecases.LoginAndExec)(nil), (*login.Exec)(nil)))

var adaptorsSet = wire.NewSet(cmd.Cmd{}, kubeconfig.Kubeconfig{}, oidc.Factory{}, env.Env{}, wire.Bind((*adaptors.Cmd)(nil), (*cmd.Cmd)(nil)), wire.Bind((*adaptors.Kubeconfig)(nil), (*kubeconfig.Kubeconfig)(nil)), wire.Bind((*adaptors.OIDC)(nil), (*oidc.Factory)(nil)), wire.Bind((*adaptors.Env)(nil), (*env.Env)(nil)))

var extraSet = wire.NewSet(login.ShowLocalServerURL{}, wire.Bind((*usecases.LoginShowLocalServerURL)(nil), (*login.ShowLocalServerURL)(nil)), logger.New)
